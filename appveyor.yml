# appveyor.yml
# Configuration for continuous integration (CI).
# http://www.appveyor.com/about
# http://www.appveyor.com/docs/appveyor-yml

environment:
  global:
    CODECOV_TOKEN:
      secure: Rg0Q0ecqAFle4YG3gjSDhBpV4JUTwwelG+ZGLClMkWBRZQINh5a20pvj3FkaIoGm
    CODACY_PROJECT_TOKEN:
      secure: kVLJfBgsiibjMtizt055TdGzT/sSnxgZHwfLp2Znyb5ie2SU4WGAPfcxI19nA8o1

  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      PYTHON: C:\Python37-x64

install:
  # Switch to selected Python
  - cmd: set PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%

  # Check that we have the expected version and architecture for Python
  - python --version
  - python -c "import struct; print(struct.calcsize('P') * 8)"

  # Upgrade to the latest version of pip
  - python -m pip install -U pip
  
  # Install wheel
  - pip install wheel

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  - pip install -r requirements.txt
  - pip install -r requirements-windows.txt
  - pip install codecov
  - pip install codacy-coverage
  - git submodule update --init --recursive

build: false  # Not a C# project, build stuff at the test step instead.

test_script:
  - pip install -r requirements-test.txt
  - pylint --rcfile=.pylintrc mydata

  - cmd: set MYDATA_DEBUG_LOG_PATH=.
  - pytest --cov=mydata

after_test:
  # Upload coverage data
  - codecov -X gcov --branch %APPVEYOR_REPO_BRANCH% --build %APPVEYOR_BUILD_VERSION% & exit 0
  - coverage xml
  - python-codacy-coverage -c %APPVEYOR_REPO_COMMIT% -d %APPVEYOR_BUILD_FOLDER% -r coverage.xml & exit 0

  # Create a binary installer
  - choco install -y InnoSetup
  - python setup.py bdist

artifacts:
  # These can be downloaded after the build is complete
  - path: .MyData_debug_log.txt
  - path: dist\*.exe
